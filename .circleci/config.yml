version: 2.1
orbs:
  android: circleci/android@1.0.3
  flutter: circleci/flutter@1.1.0
  node: circleci/node@1.1.6
jobs:
  build-and-test-flutter:
    docker:
      - image: cirrusci/flutter
    steps:
      - checkout:
          name: Checkout to the current branch to perform further tasks
      - run: 
          name: What is the current branch
          command: echo ${CIRCLE_BRANCH}
      - run: flutter doctor
      - run: 
          name: get latest dependecies for flutter
          command: cd flutter_client && flutter pub get
          
      - run:
          name: automated check for your flutter code(linting)
          command: cd flutter_client && flutter analyze
  
  build-and-test-node:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          name:  Which current branch is being used
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          keys: 
            - app-{{ checksum "package.json"}}
            - app-
      - run: 
          name: install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{ checksum "package.json"}}
  unit-test-graphAPI:
    executor:
      name: node/default
    steps:
      - checkout
      - run:
          name:  Which current branch is being used
          command: echo ${CIRCLE_BRANCH}
      - run:
          command: npm install --save-dev jest supertest 
      - run:
          name:  unit-Testing for graphql API
          command: npm run test
      - run:
          name:  unit-Testing for graphql API
          command: npm config set user 0
      - run:
          name:  unit-Testing for graphql API
          command: npm config set unsafe-perm true
  deploy-to-heroku:
    docker:
      - image: circleci/node:13.12.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: What is the current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: deploy server to heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master"]
            then
              git push https://heroku:$HEROKU_API_KEY@${HEROKU_APP_PRODUCTION}.git ${CIRCLE_BRANCH}:master -f
            elif ["${CIRCLE_BRANCH}" == "staging"]
            then
              git push https://heroku:$HEROKU_API_KEY@${HEROKU_APP_STAGING}.git ${CIRCLE_BRANCH}:master -f
            else
              git push https://heroku:$HEROKU_API_KEY@${HEROKU_APP_DEV}.git ${CIRCLE_BRANCH}:master -f
            fi

workflows:
  build:
    jobs:
      - build-and-test-flutter
      - build-and-test-node
      - deploy-to-heroku:
          requires:
            - build-and-test-flutter
            - build-and-test-node
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - unit-test-graphAPI:
          requires:
            - build-and-test-node
          filters:
            branches:
              only:
                - develop
                - staging
                - master
